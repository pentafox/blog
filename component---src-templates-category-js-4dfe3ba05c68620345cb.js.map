{"version":3,"sources":["webpack:///./src/templates/category.js","webpack:///./src/components/blogCard/blogCard.js","webpack:///./src/components/category/category.css.js","webpack:///./src/components/category/category.js"],"names":["query","CategoryPage","data","className","category","name","articles","edges","map","item","key","node","id","type","placeholder","BlogCardWrapper","styled","Link","md","sm","BlogCard","strapiId","Title","Image","Description","user","to","slugify","replace","fluid","childImageSharp","alt","source","substr","href","CategoryWrapper","div","CategoryTitle","CategoryItem","Category","allStrapiCategory"],"mappings":"iPA8CaA,EAAK,YAyCHC,UA9EM,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACtB,OACE,kBAAC,IAAD,KAEE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,yBAAKC,UAAU,uCACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,YACb,wBAAIA,UAAU,cAAd,sBAA8C,2BAAID,EAAKE,SAASC,OAE9DH,EAAKI,SAASC,MAAMC,KAAI,SAAAC,GAAI,OAC1B,kBAAC,IAAD,eACEC,IAAKD,EAAKE,KAAKC,IACXH,EAAKE,WAKjB,yBAAKR,UAAU,YACb,kBAAC,IAAD,KACE,2BAAOU,KAAK,OAAOC,YAAY,YAEjC,kBAAC,IAAD,c,4nDCvBhB,IAAMC,EAAkBC,YAAOC,OAAPD,CAAH,IAKjBE,IAeAC,IAaEA,IAKAD,KAkESE,IA3BE,SAAC,GAOX,IANLC,EAMI,EANJA,SACAC,EAKI,EALJA,MACAC,EAII,EAJJA,MACAnB,EAGI,EAHJA,SACAoB,EAEI,EAFJA,YACAC,EACI,EADJA,KAEA,OACE,kBAACV,EAAD,CAAiBW,GAAE,YAAcL,EAAd,IAA0BM,YAAQL,IACnD,yBAAKnB,UAAU,eACb,0BAAMA,UAAU,iBAAiBC,EAASC,MAAQ,IAAIuB,QAAQ,IAAK,MACnE,uBAAGzB,UAAU,eAAemB,GAC5B,kBAAC,IAAgBG,GACjB,yBAAKtB,UAAU,sBACb,kBAAC,IAAD,CAAK0B,MAAON,EAAMO,gBAAgBD,MAAOE,IAAKT,EAAOnB,UAAU,gBAEjE,kBAAC,IAAD,CAAeA,UAAU,MAAM6B,OAAWR,EAAYS,OAAO,EAAG,KAA3B,QACrC,uBAAG9B,UAAU,WAAW+B,KAAK,KAA7B,YAEE,uBAAG/B,UAAU,wB,ooBCvGhB,IAAMgC,EAAkBnB,IAAOoB,IAAV,KAIfC,EAAgBrB,IAAOoB,IAAV,KAMbE,EAAetB,YAAOC,OAAPD,CAAH,KCqBVuB,IA7BE,SAAC,I,2EAAQ,CAAD,GACvB,IAAMrC,EAAI,OAcV,OACE,kBAACiC,EAAD,KACE,kBAACE,EAAD,mBACA,6BAEInC,EAAKsC,kBAAkBjC,MAAMC,KAAI,SAAAC,GAAI,OACnC,kBAAC6B,EAAD,CAAc5B,IAAKD,EAAKE,KAAKC,GAAIc,GAAE,aAAejB,EAAKE,KAAKU,SAAzB,IAAqCM,YAAQlB,EAAKE,KAAKN,OAAUI,EAAKE,KAAKN","file":"component---src-templates-category-js-4dfe3ba05c68620345cb.js","sourcesContent":["import React from \"react\"\n\nimport Layout from \"../components/layout/layout\"\nimport { HomeWrapper, BlogWrapper } from \"../components/home/home.css\"\nimport { graphql } from \"gatsby\"\nimport BlogCard from \"../components/blogCard/blogCard\"\nimport { SearchContainer } from \"../components/nav/nav.css\"\nimport Category from \"../components/category/category\";\n\nconst CategoryPage = ({ data }) => {\n  return (\n    <Layout>\n      {/* home page starts */}\n      <HomeWrapper>\n        <BlogWrapper>\n          <div className=\"container lg-container xs-fullwidth\">\n            <div className=\"row\">\n              <div className=\"col-sm-9\">\n                <h3 className=\"info-title\">Search results for <i>{data.category.name}</i></h3>\n                {\n                  data.articles.edges.map(item => (\n                    <BlogCard\n                      key={item.node.id}\n                      {...item.node}\n                    />\n                  ))\n                }\n              </div>\n              <div className=\"col-sm-3\">\n                <SearchContainer>\n                  <input type=\"text\" placeholder=\"Search\" />\n                </SearchContainer>\n                <Category />\n              </div>\n              {/* <div className=\"col-sm-6\"><BlogCard /></div>\n              <div className=\"col-sm-6\"><BlogCard /></div>\n              <div className=\"col-sm-6\"><BlogCard /></div> */}\n            </div>\n          </div>\n        </BlogWrapper>\n      </HomeWrapper>\n      {/* home page ends */}\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query CategoryPageQuery($id: Int!) {\n    articles: allStrapiArticle(filter: { category: { id: { eq: $id } } }) {\n      edges {\n        node {\n          strapiId\n          id\n          Title\n          Description\n          category {\n            name\n          }\n          Image {\n            childImageSharp {\n              fluid(\n                maxHeight: 300,\n                quality: 90,\n                traceSVG: {\n                  color: \"#292733\"\n                  turnPolicy: TURNPOLICY_MAJORITY\n                }\n              ) {\n                ...GatsbyImageSharpFluid_withWebp_tracedSVG\n              }\n            }\n          }\n          user {\n            username\n            created_at(formatString: \"DD MMM, YYYY\")\n            updated_at(formatString: \"DD MMM, YYYY\")\n          }\n        }\n      }\n    }\n\n    category: strapiCategory(strapiId: { eq: $id }) {\n      name\n    }\n  }\n`;\n\nexport default CategoryPage\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'gatsby';\nimport ReactMarkdown from \"react-markdown\";\nimport Img from \"gatsby-image\"\nimport { sm, md } from 'helpers/device';\nimport UserDetails from '../userDetails/userDetails';\nimport { slugify } from '../../helpers/utils';\n\nconst BlogCardWrapper = styled(Link)`\n  display: block;\n  cursor: pointer;\n  margin-bottom: 48px;\n  \n  ${md}{\n    &:hover {\n      .blog-image-wrapper {\n        .blog-image {\n          transform: scale(1.08);\n        }\n\n\n        \n          color: blue !important;\n        }\n      }\n    }\n  }\n\n  ${sm} {\n    &:hover {\n      p.heading-txt {\n        color: #276ef1;\n      }\n    }\n  }\n\n  .blog-image-wrapper {\n    height: 224px;\n    margin-bottom: 12px;\n    overflow: hidden;\n\n    ${sm}{\n      height: 268px;\n      margin-bottom: 16px;\n    }\n\n    ${md}{\n      height: 360px;\n    }\n\n    .blog-image {\n      width: 100%;\n      height: 100%;\n      object-fit: cover;  \n      transition: all .6s ease;\n    }\n  }\n\n  a.btn-more {\n    padding: 8px 16px;\n    color: #222;\n    border: 1px solid #2d2d2d;\n    background-image: linear-gradient(to left,\n      transparent,\n      transparent 50%,\n      #2d2d2d 50%,\n      #2d2d2d);\n    background-position: 100% 0;\n    background-size: 200% 100%;\n    transition: all .25s ease-in;\n\n    i {\n      vertical-align: middle;\n      margin-left: 8px;\n    }\n\n    &:hover,\n    &:focus,\n    &:active {\n      background-position: 0 0;\n      color:#fdfdfd;\n    }\n  }\n`;\n\nconst BlogCard = ({\n  strapiId,\n  Title,\n  Image,\n  category,\n  Description,\n  user,\n}) => {\n  return (\n    <BlogCardWrapper to={`/article/${strapiId}/${slugify(Title)}`}>\n      <div className=\"content-sec\">\n        <span className=\"category-txt\">{(category.name || \"\").replace(\"_\", \" \")}</span>\n        <p className=\"heading-txt\">{Title}</p>\n        <UserDetails {...user} />\n        <div className=\"blog-image-wrapper\">\n          <Img fluid={Image.childImageSharp.fluid} alt={Title} className=\"blog-image\" />\n        </div>\n        <ReactMarkdown className=\"txt\" source={`${Description.substr(0, 240)}...`} />\n        <a className=\"btn-more\" href=\"/\">\n          Read more\n          <i className=\"pf-arrow-right\" />\n        </a>\n      </div>\n    </BlogCardWrapper>\n  );\n};\n\nexport default BlogCard;\n","import styled from 'styled-components';\nimport { Link } from 'gatsby'\n\nexport const CategoryWrapper = styled.div`\n  margin-top: 24px;\n`;\n\nexport const CategoryTitle = styled.div`\n  font-size: 16px;\n  font-weight: 500;\n  margin: 4px 0;\n`;\n\nexport const CategoryItem = styled(Link)`\n  padding: 6px 12px;\n  display: block;\n  font-size: 14px;\n  transition: all 0.3s ease-in-out;\n  border-radius: 3px;\n  \n  &:hover,\n  &:focus,\n  &:active {\n    background-color: rgba(20,20,20,0.1);\n  }\n\n`;","import React from 'react';\nimport { useStaticQuery, graphql, Link } from 'gatsby';\nimport { slugify } from '../../helpers/utils';\nimport { CategoryWrapper, CategoryTitle, CategoryItem } from './category.css';\n\nconst Category = ({}) => {\n  const data = useStaticQuery(graphql`\n    query CategoriesList {\n      allStrapiCategory {\n        edges {\n          node {\n            name\n            id\n            strapiId\n          }\n        }\n      }\n    }\n  `);\n\n  return (\n    <CategoryWrapper>\n      <CategoryTitle>Categories</CategoryTitle>\n      <div>\n        {\n          data.allStrapiCategory.edges.map(item => (\n            <CategoryItem key={item.node.id} to={`/category/${item.node.strapiId}/${slugify(item.node.name)}`}>{item.node.name}</CategoryItem>\n          ))\n        }\n      </div>\n    </CategoryWrapper>\n  )\n}\n\nexport default Category;"],"sourceRoot":""}